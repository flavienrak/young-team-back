generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x", "debian-openssl-1.1.x"]
  output        = "../../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int     @id @default(autoincrement())
  name       String
  email      String  @unique
  password   String
  secteur    String?
  profession String?
  bio        String?
  type       String  @default("person")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  articles  Article[]
  files     File[]
  sections  Section[]
  userInfos UserInfos?
}

model UserInfos {
  id               Int     @id @default(autoincrement())
  isVerified       Boolean @default(false)
  acceptConditions Boolean @default(false)

  userId Int @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Article {
  id          Int    @id @default(autoincrement())
  title       String
  description String
  secteur     String

  userId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  sections Section[]
  files    File[]
}

model Section {
  id      Int    @id @default(autoincrement())
  content String

  userId    Int
  articleId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  article Article @relation(fields: [articleId], references: [id], onDelete: Cascade)

  files File[]
}

model File {
  id  Int    @id @default(autoincrement())
  src String

  userId    Int
  sectionId Int?
  articleId Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  section Section? @relation(fields: [sectionId], references: [id], onDelete: Cascade)
  article Article? @relation(fields: [articleId], references: [id], onDelete: Cascade)
}
